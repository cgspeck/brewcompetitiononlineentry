FROM ghcr.io/linuxserver/swag

ENV BCOEM_SETUP_FREE_ACCESS=false
ENV DB_DATABASE=set-me
ENV DB_HOST=set-me
ENV DB_PASSWORD=set-me
ENV DB_USER=set-me

ENV CLOUDFLARE_API_KEY=set-me
ENV CLOUDFLARE_EMAIL=set-me

RUN apk add --no-cache php7-mysqli

COPY . /config/www/
RUN mv /config/www/docker/* /usr/local/bin/ && \
    rm -rf /config/www/docker && \
    mkdir -p /config/www/classes/htmlpurifier/standalone/HTMLPurifier/DefinitionCache/Serializer && \
    chmod 777 /config/www/classes/htmlpurifier/standalone/HTMLPurifier/DefinitionCache/Serializer

COPY ./docker/swag /

# ENV ENABLE_SSL=false
# ENV PORT=9000

# Configure Apache
# RUN cp /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled
# RUN cp /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled

# Use the default production configuration
# RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
# RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"

# Install required PHP plugins
# RUN docker-php-ext-install mysqli

# COPY . /var/www/html/
# RUN mv /var/www/html/docker/* /usr/local/bin/ && \
#     rm -rf /var/www/html/docker && \
#     mkdir -p /var/www/html/classes/htmlpurifier/standalone/HTMLPurifier/DefinitionCache/Serializer && \
#     chmod 777 /var/www/html/classes/htmlpurifier/standalone/HTMLPurifier/DefinitionCache/Serializer

# CMD ["bcoem-entry"]
